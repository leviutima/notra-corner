// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(uuid())
  name              String
  surname           String
  email             String             @unique
  password          String
  birthDate         DateTime           @db.Date
  createdAt         DateTime           @default(now())
  role              Role               @default(USER)
  verificationCodes VerificationCode[]
  taskBoard         TaskBoard[]
}

model VerificationCode {
  id   String @id @default(uuid())
  code String @unique @db.Char(6)

  createdAt DateTime @default(now())
  expiresAt DateTime

  user   User   @relation(fields: [userId], references: [id])
  userId String @unique

  @@index([userId])
}

model TaskBoard {
  id    String @id @default(uuid())
  title String

  user   User     @relation(fields: [userId], references: [id])
  userId String
  column Column[]
}

model Column {
  id    Int    @id @default(autoincrement())
  title String
  order Int

  activities Activitie[]

  taskBoard   TaskBoard @relation(fields: [taskBoardId], references: [id])
  taskBoardId String
}

model Activitie {
  id          String  @id @default(uuid())
  title       String
  description String?
  finished    Boolean
  order       Int

  column   Column @relation(fields: [columnId], references: [id], onDelete: Cascade)
  columnId Int

  checkList CheckList[]
}

model CheckList {
  id        Int      @id @default(autoincrement())
  title     String
  finished  Boolean
  order     Int
  createdAt DateTime @default(now())

  activitie   Activitie @relation(fields: [activitieId], references: [id], onDelete: Cascade)
  activitieId String
}

model FeatureSuggestion {
  id         String @id @default(uuid())
  name       String
  surname    String
  email      String
  suggestion String
}

enum Role {
  ADMIN
  USER
}
